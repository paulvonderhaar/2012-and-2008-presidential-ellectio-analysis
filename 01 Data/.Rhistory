df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT z.STATE_ABBREVIATION, z.GENERAL_RESULTS as Votes_2008, u.FIRST_NAME, u.STATE_POSTAL, u.TOTAL_VOTES_CAST as Votes_2012
FROM COPY_OF_2008PRES z
LEFT JOIN US_ELECTION_RESULTS u ON z.STATE_ABBREVIATION = u.STATE_POSTAL
WHERE u.FIRST_NAME is not null;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df1 <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from ELECTIONOF2008 where CANDIDATE is not null"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pmv347', PASS='orcl_pmv347', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
tbl_df(df1)
require(tidyr)
require(dplyr)
require(ggplot2)
# Be sure to set working directory to whatever's right for your machine
setwd("~/Desktop/University of Texas Classwork/Elements of Data Visualization/JacobAndThePauls-DV_RProject3/01 Data")
file_path <- "Copy of 2008pres.reformatted.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("X1", "General_Results")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                        \_/
#df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
#df$Ship_Date  <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Ship_Date),  tz="UTC")))
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
require(tidyr)
require(dplyr)
require(ggplot2)
# Be sure to set working directory to whatever's right for your machine
setwd("~/Desktop/University of Texas Classwork/Elements of Data Visualization/JacobAndThePauls-DV_RProject3/01 Data")
file_path <- "Copy of 2008pres.reformatted.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("X1", "GENERAL_RESULTS")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                        \_/
#df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
#df$Ship_Date  <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Ship_Date),  tz="UTC")))
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT z.STATE_ABBREVIATION, z.GENERAL_RESULTS as Votes_2008, u.FIRST_NAME, u.STATE_POSTAL, u.TOTAL_VOTES_CAST as Votes_2012
FROM COPY_OF_2008PRESREFORMATTED z
LEFT JOIN US_ELECTION_RESULTS u ON z.STATE_ABBREVIATION = u.STATE_POSTAL
WHERE u.FIRST_NAME is not null;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(TOTAL_VOTES_CAST) as Votes_2012
FROM US_ELECTION_RESULTS
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df2)
dplyr::full_join(df1, df2, by="STATE_ABBREVIATION") %>% tbl_df
df1 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, GENERAL_RESULTS, FIRST_NAME
FROM COPY_OF_2008PRESREFORMATTED
WHERE FIRST_NAME is null;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df1)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(TOTAL_VOTES_CAST) as Votes_2012
FROM US_ELECTION_RESULTS
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df2)
dplyr::full_join(df1, df2, by="STATE_ABBREVIATION") %>% tbl_df
require("jsonlite")
require(dplyr)
require("RCurl")
df1 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(GENERAL_RESULTS) as Votes_2008
FROM COPY_OF_2008PRESREFORMATTED
WHERE FIRST_NAME is null AND STATE_ABBREVIATION is not null
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df1)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(TOTAL_VOTES_CAST) as Votes_2012
FROM US_ELECTION_RESULTS
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df2)
dplyr::full_join(df1, df2, by="STATE_ABBREVIATION") %>% tbl_df
df1 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(GENERAL_RESULTS) as Votes_2008
FROM COPY_OF_2008PRESREFORMATTED
WHERE FIRST_NAME is null AND STATE_ABBREVIATION is not null
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df1)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(TOTAL_VOTES_CAST) as Votes_2012
FROM US_ELECTION_RESULTS
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df2)
dplyr::full_join(df1, df2, by="STATE_ABBREVIATION") %>% tbl_df
df <- dplyr::full_join(df1, df2, by="STATE_ABBREVIATION")
df %>% mutate(average = ((VOTES_2012 - VOTES_2008) / VOTES_2008) / 100) %>% View
df %>% mutate(average = ((VOTES_2012 - VOTES_2008) / VOTES_2008) * 100) %>% View
df %>% mutate(average = ((VOTES_2012 - VOTES_2008) / VOTES_2008) * 100) %>% View
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AGE)), y=as.numeric(as.character(FARE)), color=SEX),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AGE)), y=as.numeric(as.character(FARE)), color=SEX),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AGE)), y=as.numeric(as.character(FARE)), color=SEX),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require("jsonlite")
require(dplyr)
require("RCurl")
df1 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(GENERAL_RESULTS) as Votes_2008
FROM COPY_OF_2008PRESREFORMATTED
WHERE FIRST_NAME is null AND STATE_ABBREVIATION is not null
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df1)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(TOTAL_VOTES_CAST) as Votes_2012
FROM US_ELECTION_RESULTS
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df2)
df <- dplyr::full_join(df1, df2, by="STATE_ABBREVIATION")
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
aes(STATE_ABBREVIATION, y = value, color = variable)) +
geom_point(aes(y = Votes_2008, col = "y1")) +
geom_point(aes(y = Votes_2012, col = "y2"))
)
require("jsonlite")
require(dplyr)
require("RCurl")
df1 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(GENERAL_RESULTS) as Votes_2008
FROM COPY_OF_2008PRESREFORMATTED
WHERE FIRST_NAME is null AND STATE_ABBREVIATION is not null
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df1)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(TOTAL_VOTES_CAST) as Votes_2012
FROM US_ELECTION_RESULTS
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df2)
df <- dplyr::full_join(df1, df2, by="STATE_ABBREVIATION")
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
aes(STATE_ABBREVIATION, y = value, color = variable)) +
geom_point(aes(y = Votes_2008, col = "y1")) +
geom_point(aes(y = Votes_2012, col = "y2"))
require("jsonlite")
require(dplyr)
require("RCurl")
df1 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(GENERAL_RESULTS) as Votes_2008
FROM COPY_OF_2008PRESREFORMATTED
WHERE FIRST_NAME is null AND STATE_ABBREVIATION is not null
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df1)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(TOTAL_VOTES_CAST) as Votes_2012
FROM US_ELECTION_RESULTS
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df2)
df <- dplyr::full_join(df1, df2, by="STATE_ABBREVIATION")
require(extrafont)
ggplot(df,
aes(STATE_ABBREVIATION, y = value, color = variable)) +
geom_point(aes(y = Votes_2008, col = "y1")) +
geom_point(aes(y = Votes_2012, col = "y2"))
require(extrafont)
ggplot(df,
aes(STATE_ABBREVIATION, y = value, color = variable)) +
geom_point(aes(y = VOTES_2008, col = "y1")) +
geom_point(aes(y = VOTES_2012, col = "y2"))
new_df <- df %>% mutate(average = ((VOTES_2012 - VOTES_2008) / VOTES_2008) * 100)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Percent Change Between Last Two Elections') +
labs(x="State", y=paste("Percent Change")) +
layer(data=new_df,
mapping=aes(x=as.numeric(as.character(STATE_ABBREVIATION)), y=as.numeric(average)),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
new_df <- df %>% mutate(average = ((VOTES_2012 - VOTES_2008) / VOTES_2008) * 100)
View(new_df)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Percent Change Between Last Two Elections') +
labs(x="State", y=paste("Percent Change")) +
layer(data=new_df,
mapping=aes(x=as.numeric(as.character(STATE_ABBREVIATION)), y=as.numeric(average)) COLOR = STATE_ABBREVIATION,
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Percent Change Between Last Two Elections') +
labs(x="State", y=paste("Percent Change")) +
layer(data=new_df,
mapping=aes(x=as.numeric(as.character(STATE_ABBREVIATION)), y=as.numeric(average), COLOR = STATE_ABBREVIATION)
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Percent Change Between Last Two Elections') +
labs(x="State", y=paste("Percent Change")) +
layer(data=new_df,
mapping=aes(x=as.numeric(as.character(STATE_ABBREVIATION)), y=as.numeric(average), color=STATE_ABBREVIATION),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
View(new_df)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Percent Change Between Last Two Elections') +
labs(x="State", y=paste("Percent Change")) +
layer(data=new_df,
mapping=aes(x=as.numeric(as.character(STATE_ABBREVIATION)), y=as.numeric(average)),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Percent Change Between Last Two Elections') +
labs(x="State", y=paste("Percent Change")) +
layer(data=new_df,
mapping=aes(x=as.numeric(as.character(STATE_ABBREVIATION)), y=as.numeric(average)),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Percent Change Between Last Two Elections') +
labs(x="State", y=paste("Percent Change")) +
layer(data=new_df,
mapping=aes(x=as.character(STATE_ABBREVIATION), y=as.numeric(average)),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
require("jsonlite")
require(dplyr)
require("RCurl")
df1 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(GENERAL_RESULTS) as Votes_2008
FROM COPY_OF_2008PRESREFORMATTED
WHERE FIRST_NAME is null AND STATE_ABBREVIATION is not null
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df1)
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"SELECT STATE_ABBREVIATION, SUM(TOTAL_VOTES_CAST) as Votes_2012
FROM US_ELECTION_RESULTS
GROUP BY STATE_ABBREVIATION;"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df2)
df <- dplyr::full_join(df1, df2, by="STATE_ABBREVIATION")
require(extrafont)
ggplot(df,
aes(STATE_ABBREVIATION, y = value, color = variable)) +
geom_point(aes(y = VOTES_2008, col = "y1")) +
geom_point(aes(y = VOTES_2012, col = "y2"))
new_df <- df %>% mutate(average = ((VOTES_2012 - VOTES_2008) / VOTES_2008) * 100)
View(new_df)
ggplot() +
coord_cartesian() +
scale_x_discrete() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Percent Change Between Last Two Elections') +
labs(x="State", y=paste("Percent Change")) +
layer(data=new_df,
mapping=aes(x=as.character(STATE_ABBREVIATION), y=as.numeric(average)),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
df1 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query= "SELECT * FROM COPY_OF_2008PRESREFORMATTED;"')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
df2 <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query="SELECT * FROM US_ELECTION_RESULTS;"')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_jam8789', PASS='orcl_jam8789', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
summary(df1)
install.packages("XQuartz")
